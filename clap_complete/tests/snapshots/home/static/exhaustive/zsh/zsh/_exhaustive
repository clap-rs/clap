#compdef exhaustive

autoload -U is-at-least

_exhaustive() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'--generate=[generate]:SHELL:(bash elvish fish powershell zsh)' \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_exhaustive_commands" \
"*::: :->exhaustive" \
&& ret=0
    case $state in
    (exhaustive)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-command-$line[1]:"
        case $line[1] in
            (action)
_arguments "${_arguments_options[@]}" : \
'--set=[value]: : ' \
'--choice=[enum]: :(first second)' \
'--set-true[bool]' \
'*--count[number]' \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(quote)
_arguments "${_arguments_options[@]}" : \
'--choice=[]: :((bash\:"bash (shell)"
fish\:"fish shell"
zsh\:"zsh shell"))' \
'--single-quotes[Can be '\''always'\'', '\''auto'\'', or '\''never'\'']' \
'--double-quotes[Can be "always", "auto", or "never"]' \
'--backticks[For more information see \`echo test\`]' \
'--backslash[Avoid '\''\\n'\'']' \
'--brackets[List packages \[filter\]]' \
'--expansions[Execute the shell command with \$SHELL]' \
'--global[everywhere]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_exhaustive__quote_commands" \
"*::: :->quote" \
&& ret=0

    case $state in
    (quote)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-quote-command-$line[1]:"
        case $line[1] in
            (cmd-single-quotes)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(cmd-double-quotes)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(cmd-backticks)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(cmd-backslash)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(cmd-brackets)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(cmd-expansions)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(escape-help)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_exhaustive__quote__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-quote-help-command-$line[1]:"
        case $line[1] in
            (cmd-single-quotes)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-double-quotes)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-backticks)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-backslash)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-brackets)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-expansions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(escape-help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(value)
_arguments "${_arguments_options[@]}" : \
'--delim=[]: : ' \
'--tuple=[]: : : : ' \
'--require-eq=[]: : ' \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*;::term:' \
&& ret=0
;;
(pacman)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_exhaustive__pacman_commands" \
"*::: :->pacman" \
&& ret=0

    case $state in
    (pacman)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-pacman-command-$line[1]:"
        case $line[1] in
            (one)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(two)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_exhaustive__pacman__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-pacman-help-command-$line[1]:"
        case $line[1] in
            (one)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(two)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(last)
_arguments "${_arguments_options[@]}" : \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'::first:' \
'::free:' \
&& ret=0
;;
(alias)
_arguments "${_arguments_options[@]}" : \
'-o+[cmd option]: : ' \
'-O+[cmd option]: : ' \
'--option=[cmd option]: : ' \
'--opt=[cmd option]: : ' \
'-f[cmd flag]' \
'-F[cmd flag]' \
'--flag[cmd flag]' \
'--flg[cmd flag]' \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'::positional:' \
&& ret=0
;;
(hint)
_arguments "${_arguments_options[@]}" : \
'--choice=[]: :(bash fish zsh)' \
'--unknown=[]: : ' \
'--other=[]: :( )' \
'-p+[]: :_files' \
'--path=[]: :_files' \
'-f+[]: :_files' \
'--file=[]: :_files' \
'-d+[]: :_files -/' \
'--dir=[]: :_files -/' \
'-e+[]: :_absolute_command_paths' \
'--exe=[]: :_absolute_command_paths' \
'--cmd-name=[]: :_command_names -e' \
'-c+[]: :_cmdstring' \
'--cmd=[]: :_cmdstring' \
'-u+[]: :_users' \
'--user=[]: :_users' \
'-H+[]: :_hosts' \
'--host=[]: :_hosts' \
'--url=[]: :_urls' \
'--email=[]: :_email_addresses' \
'--global[everywhere]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*::command_with_args:_cmdambivalent' \
&& ret=0
;;
(complete)
_arguments "${_arguments_options[@]}" : \
'--shell=[Specify shell to complete for]:SHELL:(bash fish)' \
'--register=[Path to write completion-registration to]:REGISTER:_files' \
'--global[everywhere]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
'*::comp_words:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_exhaustive__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-help-command-$line[1]:"
        case $line[1] in
            (action)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(quote)
_arguments "${_arguments_options[@]}" : \
":: :_exhaustive__help__quote_commands" \
"*::: :->quote" \
&& ret=0

    case $state in
    (quote)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-help-quote-command-$line[1]:"
        case $line[1] in
            (cmd-single-quotes)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-double-quotes)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-backticks)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-backslash)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-brackets)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cmd-expansions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(escape-help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(value)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(pacman)
_arguments "${_arguments_options[@]}" : \
":: :_exhaustive__help__pacman_commands" \
"*::: :->pacman" \
&& ret=0

    case $state in
    (pacman)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:exhaustive-help-pacman-command-$line[1]:"
        case $line[1] in
            (one)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(two)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(last)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(alias)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(hint)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(complete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_exhaustive_commands] )) ||
_exhaustive_commands() {
    local commands; commands=(
'action:' \
'quote:' \
'value:' \
'pacman:' \
'last:' \
'alias:' \
'hint:' \
'complete:Register shell completions for this program' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'exhaustive commands' commands "$@"
}
(( $+functions[_exhaustive__action_commands] )) ||
_exhaustive__action_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive action commands' commands "$@"
}
(( $+functions[_exhaustive__help__action_commands] )) ||
_exhaustive__help__action_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help action commands' commands "$@"
}
(( $+functions[_exhaustive__alias_commands] )) ||
_exhaustive__alias_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive alias commands' commands "$@"
}
(( $+functions[_exhaustive__help__alias_commands] )) ||
_exhaustive__help__alias_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help alias commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__cmd-backslash_commands] )) ||
_exhaustive__help__quote__cmd-backslash_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote cmd-backslash commands' commands "$@"
}
(( $+functions[_exhaustive__quote__cmd-backslash_commands] )) ||
_exhaustive__quote__cmd-backslash_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote cmd-backslash commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__cmd-backslash_commands] )) ||
_exhaustive__quote__help__cmd-backslash_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help cmd-backslash commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__cmd-backticks_commands] )) ||
_exhaustive__help__quote__cmd-backticks_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote cmd-backticks commands' commands "$@"
}
(( $+functions[_exhaustive__quote__cmd-backticks_commands] )) ||
_exhaustive__quote__cmd-backticks_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote cmd-backticks commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__cmd-backticks_commands] )) ||
_exhaustive__quote__help__cmd-backticks_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help cmd-backticks commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__cmd-brackets_commands] )) ||
_exhaustive__help__quote__cmd-brackets_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote cmd-brackets commands' commands "$@"
}
(( $+functions[_exhaustive__quote__cmd-brackets_commands] )) ||
_exhaustive__quote__cmd-brackets_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote cmd-brackets commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__cmd-brackets_commands] )) ||
_exhaustive__quote__help__cmd-brackets_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help cmd-brackets commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__cmd-double-quotes_commands] )) ||
_exhaustive__help__quote__cmd-double-quotes_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote cmd-double-quotes commands' commands "$@"
}
(( $+functions[_exhaustive__quote__cmd-double-quotes_commands] )) ||
_exhaustive__quote__cmd-double-quotes_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote cmd-double-quotes commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__cmd-double-quotes_commands] )) ||
_exhaustive__quote__help__cmd-double-quotes_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help cmd-double-quotes commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__cmd-expansions_commands] )) ||
_exhaustive__help__quote__cmd-expansions_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote cmd-expansions commands' commands "$@"
}
(( $+functions[_exhaustive__quote__cmd-expansions_commands] )) ||
_exhaustive__quote__cmd-expansions_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote cmd-expansions commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__cmd-expansions_commands] )) ||
_exhaustive__quote__help__cmd-expansions_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help cmd-expansions commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__cmd-single-quotes_commands] )) ||
_exhaustive__help__quote__cmd-single-quotes_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote cmd-single-quotes commands' commands "$@"
}
(( $+functions[_exhaustive__quote__cmd-single-quotes_commands] )) ||
_exhaustive__quote__cmd-single-quotes_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote cmd-single-quotes commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__cmd-single-quotes_commands] )) ||
_exhaustive__quote__help__cmd-single-quotes_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help cmd-single-quotes commands' commands "$@"
}
(( $+functions[_exhaustive__complete_commands] )) ||
_exhaustive__complete_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive complete commands' commands "$@"
}
(( $+functions[_exhaustive__help__complete_commands] )) ||
_exhaustive__help__complete_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help complete commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote__escape-help_commands] )) ||
_exhaustive__help__quote__escape-help_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help quote escape-help commands' commands "$@"
}
(( $+functions[_exhaustive__quote__escape-help_commands] )) ||
_exhaustive__quote__escape-help_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote escape-help commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__escape-help_commands] )) ||
_exhaustive__quote__help__escape-help_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help escape-help commands' commands "$@"
}
(( $+functions[_exhaustive__help_commands] )) ||
_exhaustive__help_commands() {
    local commands; commands=(
'action:' \
'quote:' \
'value:' \
'pacman:' \
'last:' \
'alias:' \
'hint:' \
'complete:Register shell completions for this program' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'exhaustive help commands' commands "$@"
}
(( $+functions[_exhaustive__help__help_commands] )) ||
_exhaustive__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help help commands' commands "$@"
}
(( $+functions[_exhaustive__pacman__help_commands] )) ||
_exhaustive__pacman__help_commands() {
    local commands; commands=(
'one:' \
'two:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'exhaustive pacman help commands' commands "$@"
}
(( $+functions[_exhaustive__pacman__help__help_commands] )) ||
_exhaustive__pacman__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive pacman help help commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help_commands] )) ||
_exhaustive__quote__help_commands() {
    local commands; commands=(
'cmd-single-quotes:Can be '\''always'\'', '\''auto'\'', or '\''never'\''' \
'cmd-double-quotes:Can be "always", "auto", or "never"' \
'cmd-backticks:For more information see \`echo test\`' \
'cmd-backslash:Avoid '\''\\n'\''' \
'cmd-brackets:List packages \[filter\]' \
'cmd-expansions:Execute the shell command with \$SHELL' \
'escape-help:\\tab	"'\'' New Line' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'exhaustive quote help commands' commands "$@"
}
(( $+functions[_exhaustive__quote__help__help_commands] )) ||
_exhaustive__quote__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive quote help help commands' commands "$@"
}
(( $+functions[_exhaustive__help__hint_commands] )) ||
_exhaustive__help__hint_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help hint commands' commands "$@"
}
(( $+functions[_exhaustive__hint_commands] )) ||
_exhaustive__hint_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive hint commands' commands "$@"
}
(( $+functions[_exhaustive__help__last_commands] )) ||
_exhaustive__help__last_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help last commands' commands "$@"
}
(( $+functions[_exhaustive__last_commands] )) ||
_exhaustive__last_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive last commands' commands "$@"
}
(( $+functions[_exhaustive__help__pacman__one_commands] )) ||
_exhaustive__help__pacman__one_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help pacman one commands' commands "$@"
}
(( $+functions[_exhaustive__pacman__help__one_commands] )) ||
_exhaustive__pacman__help__one_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive pacman help one commands' commands "$@"
}
(( $+functions[_exhaustive__pacman__one_commands] )) ||
_exhaustive__pacman__one_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive pacman one commands' commands "$@"
}
(( $+functions[_exhaustive__help__pacman_commands] )) ||
_exhaustive__help__pacman_commands() {
    local commands; commands=(
'one:' \
'two:' \
    )
    _describe -t commands 'exhaustive help pacman commands' commands "$@"
}
(( $+functions[_exhaustive__pacman_commands] )) ||
_exhaustive__pacman_commands() {
    local commands; commands=(
'one:' \
'two:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'exhaustive pacman commands' commands "$@"
}
(( $+functions[_exhaustive__help__quote_commands] )) ||
_exhaustive__help__quote_commands() {
    local commands; commands=(
'cmd-single-quotes:Can be '\''always'\'', '\''auto'\'', or '\''never'\''' \
'cmd-double-quotes:Can be "always", "auto", or "never"' \
'cmd-backticks:For more information see \`echo test\`' \
'cmd-backslash:Avoid '\''\\n'\''' \
'cmd-brackets:List packages \[filter\]' \
'cmd-expansions:Execute the shell command with \$SHELL' \
'escape-help:\\tab	"'\'' New Line' \
    )
    _describe -t commands 'exhaustive help quote commands' commands "$@"
}
(( $+functions[_exhaustive__quote_commands] )) ||
_exhaustive__quote_commands() {
    local commands; commands=(
'cmd-single-quotes:Can be '\''always'\'', '\''auto'\'', or '\''never'\''' \
'cmd-double-quotes:Can be "always", "auto", or "never"' \
'cmd-backticks:For more information see \`echo test\`' \
'cmd-backslash:Avoid '\''\\n'\''' \
'cmd-brackets:List packages \[filter\]' \
'cmd-expansions:Execute the shell command with \$SHELL' \
'escape-help:\\tab	"'\'' New Line' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'exhaustive quote commands' commands "$@"
}
(( $+functions[_exhaustive__help__pacman__two_commands] )) ||
_exhaustive__help__pacman__two_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help pacman two commands' commands "$@"
}
(( $+functions[_exhaustive__pacman__help__two_commands] )) ||
_exhaustive__pacman__help__two_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive pacman help two commands' commands "$@"
}
(( $+functions[_exhaustive__pacman__two_commands] )) ||
_exhaustive__pacman__two_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive pacman two commands' commands "$@"
}
(( $+functions[_exhaustive__help__value_commands] )) ||
_exhaustive__help__value_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive help value commands' commands "$@"
}
(( $+functions[_exhaustive__value_commands] )) ||
_exhaustive__value_commands() {
    local commands; commands=()
    _describe -t commands 'exhaustive value commands' commands "$@"
}

if [ "$funcstack[1]" = "_exhaustive" ]; then
    _exhaustive "$@"
else
    compdef _exhaustive exhaustive
fi
